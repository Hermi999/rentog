- content_for :extra_javascript do
  :javascript
    ST.importListings.init();

- content_for :title_header do
  %h1#importListings-header= t(".headline")


.upload_import_file_wrapper
  - if @import_listings.invalid_attributes != []
    %li{:class=>"could-not-import"}
      = t(".cannot_import_following_listings").html_safe
      = @import_listings.invalid_attributes.map(&:inspect).join(', ')

  - if @import_listings.invalid_rows
    %li{:class=>"could-not-import"}
      = t(".cannot_import_rows").html_safe

  - if @import_listings.error_text != nil
    .import-failed
      = t(".import_failed", error_text: @import_listings.error_text).html_safe
  - else
    .import-legend
      .row
        .col-2#import-legend-new
          = t(".import_legend_new").html_safe
        .col-2#import-legend-update
          = t(".import_legend_update").html_safe
        .col-2#import-legend-failed
          = t(".import_legend_failed").html_safe

    .table
      .thead
        - @import_listings.listing_data[0].each do |_attr|
          - if _attr[0] == :description
            .th{:class => "wide"}= _attr[0]
          - else
            .th= _attr[0]
      .tbody
        - @import_listings.listing_data.each_with_index do |_data, index|
          - unless index == 0

            - if _data[:invalid] != nil
              - td_invalid = "invalid-row"

            .tr
              - _data.each do |_attr|
                - if _attr[0] == :device_name && _data[:invalid] != nil && _data[:invalid].class.to_s == "Hash"
                  - _attr[1] = _data[:invalid][:msg] + " \n" + _attr[1]


                - if _attr[0] == :invalid || _attr[0] == :update || _attr[0] == :listing_id
                  / Attr not displayed
                - elsif _attr[0] == :description
                  - if _attr[1] == nil
                    .td{:class => "td-scroll attr_no_used #{td_invalid}"}
                  - elsif _data[:update]
                    .td{:class => "td-scroll listing_update #{td_invalid}"}= _attr[1]
                  - else
                    .td{:class => "td-scroll #{td_invalid}"}= _attr[1]
                - elsif _attr[1] == "#mand_attr_missing"
                  .td{:class => "attr_error #{td_invalid}"}= t(".mandatory_attribute_missing")
                - elsif _attr[1] == nil
                  .td{:class => "attr_no_used #{td_invalid}"}
                - elsif _data[:update] && _data[:invalid] == nil
                  .td{:class => "listing_update #{td_invalid}"}= _attr[1]
                - else
                  - if _attr[0] == :device_name && _data[:invalid] != nil && _data[:invalid].class.to_s == "Hash"
                    .td{:class => "attr_error #{td_invalid}"}= _attr[1]
                  - else
                    .td{:class => "#{td_invalid}"}= _attr[1]

                /.td{:class => "td-scroll", :id => "test"}
                /  .oldVal Old value
                /  %hr
                /  .newVal New value

    #large_text

    .clear
    .import-file-btn-wrapper
      = link_to t(".link_to_abort"), import_listings_new_import_path, {:id => "import-file-abort-btn", :class => "button"}
      = link_to t(".link_to_only_create_new"), import_listings_create_listings_from_file_path, {:method => :post, :id => "import-file-create-btn" ,:class => "button"}
      = link_to t(".link_to_only_update_existing"), import_listings_update_listings_from_file_path, {:method => :post, :id => "import-file-update-btn" ,:class => "button"}
      = link_to t(".link_to_create_update"), import_listings_update_and_create_listings_from_file_path, {:method => :post, :id => "import-file-update-create-btn" ,:class => "button"}

